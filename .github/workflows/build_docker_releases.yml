name: CI releases
on:
  push:
    tags:
      - 'v*'

jobs:
  pypi:
    name: Builds python distribution, publishes to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Install pypa/build and build a binary wheel and a source tarball
        run: |
          python -m pip install build --user
          python -m build --sdist --wheel --outdir dist/ .
          ls -alh
          ls -alh build/
          ls -alh dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Create Github release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: "v${{ env.VERSION }}"
          files: |
            build/intrusion*

  docker:
    name: Builds docker image and pushes to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get version from versioneer
        run: |
          VER=$(echo $(python -c "import versioneer; print(versioneer.get_versions()['version'].replace('+', '-'))"))
          echo "VERSION=$VER" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          no-cache: true
          platforms: linux/amd64,linux/arm64
          push: true
          tags: afonsoc12/intrusion-monitor:latest,afonsoc12/intrusion-monitor:v${{ env.VERSION }}
